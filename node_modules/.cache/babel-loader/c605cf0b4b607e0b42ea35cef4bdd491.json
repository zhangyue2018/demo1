{"ast":null,"code":"import _classCallCheck from \"/home/zhangyue/test/demo1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/zhangyue/test/demo1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/zhangyue/test/demo1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/zhangyue/test/demo1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/zhangyue/test/demo1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/zhangyue/test/demo1/src/components/controller-section/ControllerSection.js\";\nimport React, { Component } from \"react\";\nimport ControllerUnit from \"./ControllerUnit\";\nimport styles from './style/style.module.scss';\n\nvar Controller =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Controller, _Component);\n\n  function Controller(props) {\n    var _this;\n\n    _classCallCheck(this, Controller);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Controller).call(this, props));\n\n    _this.doCenter = function (index) {\n      return function () {\n        _this.props.handleClick({\n          name: \"center\",\n          clickIndex: index,\n          isCenter: true,\n          isInverse: false\n        });\n      };\n    };\n\n    _this.doInverse = function (index) {\n      return function () {\n        _this.props.handleClick({\n          name: \"inverse\",\n          clickIndex: index,\n          isCenter: true,\n          isInverse: !_this.props.clickInfo.isInverse\n        });\n      };\n    };\n\n    _this.state = {\n      centerControllerInfo: {\n        controllerIndex: 0,\n        isCenter: true,\n        isInverse: false\n      },\n      controllerInfos: props.imageDatas.map(function (value, index) {\n        return {\n          controllerIndex: index,\n          isCenter: false,\n          isInverse: false\n        };\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Controller, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$state = this.state,\n          centerControllerInfo = _this$state.centerControllerInfo,\n          controllerInfos = _this$state.controllerInfos;\n      controllerInfos[centerControllerInfo.controllerIndex] = centerControllerInfo;\n      this.setState({\n        controllerInfos: controllerInfos\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      // let { stageSize, centerIndex, clickInfo } = nextProps;\n      // let preStageSize = this.props.stageSize;\n      var preClickInfo = this.props.clickInfo;\n      var clickInfo = nextProps.clickInfo;\n      var controllerInfos = this.state.controllerInfos; // if (\n      //   preStageSize.stageH !== stageSize.stageH ||\n      //   preStageSize.stageW !== stageSize.stageW\n      // ) {\n      // }\n      //当点击中心图片以外的图片或者改变window的size时\n\n      if (clickInfo.name === \"center\") {\n        //仅当点击中心图片以外的图片\n        if (clickInfo.clickIndex !== preClickInfo.clickIndex) {\n          controllerInfos[clickInfo.clickIndex] = {\n            controllerIndex: clickInfo.clickIndex,\n            isCenter: true,\n            isInverse: false\n          };\n          controllerInfos[preClickInfo.clickIndex] = {\n            controllerIndex: preClickInfo.clickIndex,\n            isCenter: false,\n            isInverse: false\n          };\n          this.setState({\n            controllerInfos: controllerInfos\n          });\n        }\n      } else if (clickInfo.name === \"inverse\") {\n        //当点击中心图片进行翻转或者改变window的size时\n        //仅当点击中心图片进行翻转时\n        if (clickInfo.isInverse !== preClickInfo.isInverse) {\n          //获取点击之前的按钮状态信息\n          var tempControllerInfo = Object.assign({}, controllerInfos[clickInfo.clickIndex]);\n          controllerInfos[clickInfo.clickIndex] = {\n            controllerIndex: clickInfo.clickIndex,\n            isCenter: true,\n            isInverse: !tempControllerInfo.isInverse //点击之后将按钮状态设置为相反值\n\n          };\n          this.setState({\n            controllerInfos: controllerInfos\n          });\n        }\n      }\n    }\n    /**\n     * 利用reArrange函数，居中对应index的图片\n     * @param index 需要被居中的图片对应的图片信息数组中的index\n     * @return {Function}\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var controllerUnits = [];\n      var imageDatas = this.props.imageDatas;\n      var controllerInfos = this.state.controllerInfos;\n      imageDatas.forEach(function (element, index) {\n        controllerUnits.push(React.createElement(ControllerUnit, {\n          key: index,\n          arrange: controllerInfos[index],\n          inverse: _this2.doInverse(index),\n          center: _this2.doCenter(index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: styles[\"controller-nav\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, controllerUnits);\n    }\n  }]);\n\n  return Controller;\n}(Component);\n\nexport default Controller;","map":{"version":3,"sources":["/home/zhangyue/test/demo1/src/components/controller-section/ControllerSection.js"],"names":["React","Component","ControllerUnit","styles","Controller","props","doCenter","index","handleClick","name","clickIndex","isCenter","isInverse","doInverse","clickInfo","state","centerControllerInfo","controllerIndex","controllerInfos","imageDatas","map","value","setState","nextProps","preClickInfo","tempControllerInfo","Object","assign","controllerUnits","forEach","element","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport ControllerUnit from \"./ControllerUnit\";\n\nimport styles from './style/style.module.scss';\n\nclass Controller extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      centerControllerInfo: {\n        controllerIndex: 0,\n        isCenter: true,\n        isInverse: false,\n      },\n      controllerInfos: props.imageDatas.map((value, index) => {\n        return {\n          controllerIndex: index,\n          isCenter: false,\n          isInverse: false,\n        }\n      }), \n    }\n  }\n\n  componentDidMount() {\n    let {centerControllerInfo, controllerInfos} = this.state;\n    controllerInfos[centerControllerInfo.controllerIndex] = centerControllerInfo;\n    this.setState({\n      controllerInfos\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // let { stageSize, centerIndex, clickInfo } = nextProps;\n    // let preStageSize = this.props.stageSize;\n    let preClickInfo = this.props.clickInfo;\n    let { clickInfo } = nextProps;\n\n    let {controllerInfos} = this.state;\n\n    // if (\n    //   preStageSize.stageH !== stageSize.stageH ||\n    //   preStageSize.stageW !== stageSize.stageW\n    // ) {\n    // }\n\n    //当点击中心图片以外的图片或者改变window的size时\n    if (clickInfo.name === \"center\") {\n      //仅当点击中心图片以外的图片\n      if (clickInfo.clickIndex !== preClickInfo.clickIndex) {\n        controllerInfos[clickInfo.clickIndex] = {\n          controllerIndex: clickInfo.clickIndex,\n          isCenter: true,\n          isInverse: false\n        };\n        controllerInfos[preClickInfo.clickIndex] = {\n          controllerIndex: preClickInfo.clickIndex,\n          isCenter: false,\n          isInverse: false\n        }\n        this.setState({controllerInfos});\n      }\n    } else if (clickInfo.name === \"inverse\") {    //当点击中心图片进行翻转或者改变window的size时\n      //仅当点击中心图片进行翻转时\n      if (clickInfo.isInverse !== preClickInfo.isInverse) {\n        //获取点击之前的按钮状态信息\n        let tempControllerInfo = Object.assign({}, controllerInfos[clickInfo.clickIndex]);\n        controllerInfos[clickInfo.clickIndex] = {\n          controllerIndex: clickInfo.clickIndex,\n          isCenter: true,\n          isInverse: !tempControllerInfo.isInverse,   //点击之后将按钮状态设置为相反值\n        };\n        this.setState({controllerInfos});\n      }\n    }\n  }\n\n  /**\n   * 利用reArrange函数，居中对应index的图片\n   * @param index 需要被居中的图片对应的图片信息数组中的index\n   * @return {Function}\n   */\n  doCenter = index => {\n    return () => {\n      this.props.handleClick({\n        name: \"center\",\n        clickIndex: index,\n        isCenter: true,\n        isInverse: false\n      });\n    };\n  };\n\n  /**\n   * 翻转图片\n   * @param index 将要执行inverse操作的存储在图片信息数组的index\n   * @return {Function} 这是一个函数，是真正的待被执行的函数\n   */\n\n  doInverse = index => {\n    return () => {\n      this.props.handleClick({\n        name: \"inverse\",\n        clickIndex: index,\n        isCenter: true,\n        isInverse: !this.props.clickInfo.isInverse\n      });\n    };\n  };\n\n  render() {\n    let controllerUnits = [];\n    let { imageDatas } = this.props;\n    let {controllerInfos} = this.state;\n\n    imageDatas.forEach((element, index) => {\n      controllerUnits.push(\n        <ControllerUnit\n          key={index}\n          arrange={controllerInfos[index]}\n          inverse={this.doInverse(index)}\n          center={this.doCenter(index)}\n        />\n      );\n    });\n\n    return <div className={styles[\"controller-nav\"]}>{controllerUnits}</div>;\n  }\n}\n\nexport default Controller;\n"]},"metadata":{},"sourceType":"module"}